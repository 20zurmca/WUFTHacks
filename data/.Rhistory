head(usefulData)
#import the data set
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
#import the data set
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
#import the data set
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
#import the data set
data<-read.csv("NewAccountTypePredictor.csv", header = T)
#installing packages
install.packages("caret")
library(caret)
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
#import the data set
setwd("/home/sam/NetBeansProjects/WUFTHacksRepo/data")
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
data$account_type_id<-as.factor(data$account_type_id)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
#installing packages
install.packages("caret")
#import the data set
setwd("/home/sam/NetBeansProjects/WUFTHacksRepo/data")
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
data$account_type_id<-as.factor(data$account_type_id)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
#installing packages
#install.packages("caret")
#library(caret)
library(rpart)
library(e1071)
library(rpart.plot)
#Decision tree
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
tree.testing<-usefulData[-train_ind,]
tree.model<-rpart(account_type_id~., usefulData)
head(tree.model)
help(predict)
pred<-predict(tree.model, tree.model, type = 'class')
pred
tab<-table(pred, tree.testing$account_type_id)
#import the data set
setwd("/home/sam/NetBeansProjects/WUFTHacksRepo/data")
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
data$account_type_id<-as.factor(data$account_type_id)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
#installing packages
#install.packages("caret")
#library(caret)
library(rpart)
library(e1071)
library(rpart.plot)
#Decision tree
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
tree.testing<-usefulData[-train_ind,]
tree.model<-rpart(account_type_id~., usefulData)
head(tree.model)
help(predict)
pred<-predict(tree.model, tree.model, type = 'class')
pred
tab<-table(pred, tree.testing$account_type_id)
pred<-predict(tree.model, tree.testing$account_type_id, type = 'class')
pred<-predict(tree.model, tree.testing$account_type_id)
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
data$account_type_id<-as.factor(data$account_type_id)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
#installing packages
#install.packages("caret")
#library(caret)
library(rpart)
library(e1071)
library(rpart.plot)
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
installed.packages("e1071")
installe.packages("e1071")
install.packages("e1071")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
library(rpart)
library(e1071)
library(rpart.plot)
install.package("rpart.plot")
install.packages("rpart.plot")
library(rpart.plot)
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
tree.testing<-usefulData[-train_ind,]
tree.model<-rpart(account_type_id~., usefulData)
help(predict)
pred<-predict(tree.model, tree.testing$account_type_id)
pred
tab<-table(pred, tree.testing$account_type_id)
head(data)
head(usefulData)
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
tree.testing<-usefulData[-train_ind,]
tree.model<-rpart(account_type_id~., usefulData)
pred<-predict(tree.model, tree.testing$account_type_id)
tree.model<-rpart(account_type_id~., data = usefulData)
pred<-predict(tree.model, tree.testing$account_type_id)
head(tree.testing$account_type_id)
pred<-predict(tree.model, tree.testing$account_type_id)
tree.model<-rpart(account_type_id~., data = usefulData)
pred<-predict(tree.model, tree.testing$account_type_id)
tree.model<-rpart(account_type_id~., data = tree.training)
pred<-predict(tree.model, tree.testing$account_type_id)
#import the data set
setwd("/home/sam/NetBeansProjects/WUFTHacksRepo/data")
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
data$account_type_id<-as.factor(data$account_type_id)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
library(rpart)
library(e1071)
library(rpart.plot)
#Decision tree
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
tree.testing<-usefulData[-train_ind,]
tree.model<-rpart(account_type_id~., data = tree.training)
pred<-predict(tree.model, tree.testing$account_type_id)
pred
tab<-table(pred, tree.testing$account_type_id)
tree.model<-rpart(account_type_id ~., data = tree.training)
pred<-predict(tree.model, tree.testing$account_type_id)
account_type_id
pred<-predict(tree.model, tree.testing$account_type_id)
tree.testing<-usefulData[-train_ind,]
tree.testing
#import the data set
setwd("/home/sam/NetBeansProjects/WUFTHacksRepo/data")
data<-read.csv("NewAccountTypePredictor.csv", header = T)
str(data)
#data$account_type_id<-as.factor(data$account_type_id)
#cleaning the data
data$account_type_id <- as.factor(data$transaction_type_id)
data$transaction_type_id<-as.factor(data$transaction_type_id)
data$business_unit_id<-as.factor(data$business_unit_id)
data$mcc_code<-as.factor(data$mcc_code)
usefulData<-data[-1,]
head(usefulData)
library(rpart)
library(e1071)
library(rpart.plot)
#Decision tree
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
tree.testing<-usefulData[-train_ind,]
tree.testing
tree.model<-rpart(account_type_id ~., data = tree.training)
pred<-predict(tree.model, tree.testing$account_type_id)
pred
tab<-table(pred, tree.testing$account_type_id)
pred<-predict(tree.model, tree.testing$account_type_id)
#partition train/test
train_ind<-sample(nrow(usefulData), .7*nrow(usefulData))
tree.training<-usefulData[train_ind,]
tree.testing<-usefulData[-train_ind,]
#Logistic Regression
logit.model<-glm(account_type_id ~. data = tree.training)
#Logistic Regression
logit.model<-glm(account_type_id ~. , data = tree.training)
